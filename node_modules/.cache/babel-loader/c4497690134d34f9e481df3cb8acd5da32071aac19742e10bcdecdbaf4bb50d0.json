{"ast":null,"code":"var _jsxFileName = \"/Users/omarabdul/Desktop/uOttawa/a-slice-of-pi-dashboard/src/components/OrderBarChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Tooltip, Legend } from \"chart.js\";\nimport { fetchOrders } from \"../services/orderService\";\n\n// Registers the necessary components for Chart.js to work with bar charts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\n\n// Defines the props for the OrderBarChart component\n\n// Defines the props for the OrderBarChart component\n\n// Functional component for displaying the order bar chart\nconst OrderBarChart = ({\n  startDate,\n  endDate\n}) => {\n  _s();\n  // State for storing order data\n  const [orderData, setOrderData] = useState([]);\n  // State for managing the filter criteria\n  const [filter, setFilter] = useState({\n    type: null,\n    size: null\n  });\n\n  // useEffect hook to update the chart data when startDate or endDate changes\n  useEffect(() => {\n    // Fetches orders and filters them based on date range\n    fetchOrders().then(data => {\n      const filteredData = data.filter(order => {\n        const orderDate = new Date(order.date);\n        return orderDate >= new Date(startDate) && orderDate <= new Date(endDate);\n      });\n      setOrderData(filteredData);\n    });\n  }, [startDate, endDate]);\n\n  // Filters the order data based on the selected type and size\n  const filteredOrders = orderData.filter(order => {\n    return (!filter.type || order.items.some(item => item.type === filter.type)) && (!filter.size || order.items.some(item => item.size === filter.size));\n  });\n\n  // Counts the number of orders per store\n  const storeOrderCounts = filteredOrders.reduce((acc, order) => {\n    acc[order.store] = (acc[order.store] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Constructs the data object for the bar chart\n  const data = {\n    labels: Object.keys(storeOrderCounts),\n    datasets: [{\n      label: \"Number of Orders\",\n      data: Object.values(storeOrderCounts),\n      backgroundColor: [\n      // Defines colors for the bars\n      \"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      borderColor: [\n      // Defines border colors for the bars\n      \"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      borderWidth: 1\n    }]\n  };\n\n  // JSX for rendering the bar chart and filter dropdowns\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pizza Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select\",\n          onChange: e => setFilter({\n            ...filter,\n            type: e.target.value || null\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cheese\",\n            children: \"Cheese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pepperoni\",\n            children: \"Pepperoni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Deluxe\",\n            children: \"Deluxe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hawaiian\",\n            children: \"Hawaiian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Meatlovers\",\n            children: \"Meatlovers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pizza Size:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown-select\",\n          onChange: e => setFilter({\n            ...filter,\n            size: e.target.value || null\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"S\",\n            children: \"Small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"M\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"L\",\n            children: \"Large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderBarChart, \"GoP2yNPJIpJWHL+/clkodtL4Zas=\");\n_c = OrderBarChart;\nexport default OrderBarChart;\nvar _c;\n$RefreshReg$(_c, \"OrderBarChart\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Tooltip","Legend","fetchOrders","jsxDEV","_jsxDEV","register","OrderBarChart","startDate","endDate","_s","orderData","setOrderData","filter","setFilter","type","size","then","data","filteredData","order","orderDate","Date","date","filteredOrders","items","some","item","storeOrderCounts","reduce","acc","store","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","children","className","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omarabdul/Desktop/uOttawa/a-slice-of-pi-dashboard/src/components/OrderBarChart.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Order } from \"../types\";\nimport { fetchOrders } from \"../services/orderService\";\n\n// Registers the necessary components for Chart.js to work with bar charts\nChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\n\n// Defines the props for the OrderBarChart component\ninterface Filter {\n  type: string | null;\n  size: string | null;\n}\n\n// Defines the props for the OrderBarChart component\ninterface OrderBarChartProps {\n  startDate: string;\n  endDate: string;\n}\n\n// Functional component for displaying the order bar chart\nconst OrderBarChart: React.FC<OrderBarChartProps> = ({\n  startDate,\n  endDate,\n}) => {\n  // State for storing order data\n  const [orderData, setOrderData] = useState<Order[]>([]);\n  // State for managing the filter criteria\n  const [filter, setFilter] = useState<Filter>({ type: null, size: null });\n\n  // useEffect hook to update the chart data when startDate or endDate changes\n  useEffect(() => {\n    // Fetches orders and filters them based on date range\n    fetchOrders().then((data) => {\n      const filteredData = data.filter((order) => {\n        const orderDate = new Date(order.date);\n        return (\n          orderDate >= new Date(startDate) && orderDate <= new Date(endDate)\n        );\n      });\n      setOrderData(filteredData);\n    });\n  }, [startDate, endDate]);\n\n  // Filters the order data based on the selected type and size\n  const filteredOrders = orderData.filter((order) => {\n    return (\n      (!filter.type || order.items.some((item) => item.type === filter.type)) &&\n      (!filter.size || order.items.some((item) => item.size === filter.size))\n    );\n  });\n\n  // Counts the number of orders per store\n  const storeOrderCounts = filteredOrders.reduce((acc, order) => {\n    acc[order.store] = (acc[order.store] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n\n  // Constructs the data object for the bar chart\n  const data = {\n    labels: Object.keys(storeOrderCounts),\n    datasets: [\n      {\n        label: \"Number of Orders\",\n        data: Object.values(storeOrderCounts),\n        backgroundColor: [\n          // Defines colors for the bars\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#4BC0C0\",\n          \"#9966FF\",\n        ],\n        borderColor: [\n          // Defines border colors for the bars\n          \"#FF6384\",\n          \"#36A2EB\",\n          \"#FFCE56\",\n          \"#4BC0C0\",\n          \"#9966FF\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // JSX for rendering the bar chart and filter dropdowns\n  return (\n    <div>\n      <div>\n        <label>\n          Pizza Type:\n          <select\n            className=\"dropdown-select\"\n            onChange={(e) =>\n              setFilter({ ...filter, type: e.target.value || null })\n            }\n          >\n            <option value=\"\">All</option>\n            <option value=\"Cheese\">Cheese</option>\n            <option value=\"Pepperoni\">Pepperoni</option>\n            <option value=\"Deluxe\">Deluxe</option>\n            <option value=\"Hawaiian\">Hawaiian</option>\n            <option value=\"Meatlovers\">Meatlovers</option>\n          </select>\n        </label>\n        <label>\n          Pizza Size:\n          <select\n            className=\"dropdown-select\"\n            onChange={(e) =>\n              setFilter({ ...filter, size: e.target.value || null })\n            }\n          >\n            <option value=\"\">All</option>\n            <option value=\"S\">Small</option>\n            <option value=\"M\">Medium</option>\n            <option value=\"L\">Large</option>\n          </select>\n        </label>\n      </div>\n      <Bar data={data} />\n    </div>\n  );\n};\n\nexport default OrderBarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}